1
a. projectId (1)
b. leaderId (1)

2
a. leaderId?
b. false

3
a. projectId
b. false

4
a. leader (parent of the parent)
b. project
c. task

5
a. true
b. false
c. false
d. false

6.
a. 4
b. 2
c. 8
d. 5
e. 2
f. 4
g. 4
h. 0
i. 9
j. 9
m. 4

DROP TABLE person;

CREATE TABLE person (
idNo number(3),
Name VARCHAR(255),
Gender VARCHAR(2),
QtyA NUMBER(2),
QtyB NUMBER(2),
PRIMARY KEY (idNo)
);

SELECT * FROM person;

INSERT INTO person VALUES (23, 'Johnny Storm','M',10,10);
INSERT INTO person VALUES (56, 'Eric Twinge','M',7,4);
INSERT INTO person VALUES (17, 'Diana Prince','F',4,7);
INSERT INTO person VALUES (28, 'Susan Storm','F',1,3);
INSERT INTO person VALUES (134, 'Dick Grayson','m',6,2);
INSERT INTO person VALUES (235,'Barbara Gordon','F',8,7);
INSERT INTO person VALUES (24, 'Selina Kyle','F',4,0);
INSERT INTO person (idNo,Name, Gender, QtyA, QtyB) VALUES (78, 'Rick Hunt','M',NULL,NULL);
INSERT INTO person VALUES (81, 'Ted Howler ','M',6,6);
INSERT INTO person VALUES (89, 'Sonita Marks ','F',3,6);
INSERT INTO person VALUES (2, 'Dave Orkle','M',4,2);

SELECT * FROM person;


7. DROP TABLE TASK;
DROP TABLE PROJECT;
DROP TABLE LEADER;

CREATE TABLE Leader(
LeaderId NUMBER(3),
Name VARCHAR(255),
PRIMARY KEY (LeaderId)
);

CREATE TABLE Project(
ProjectId NUMBER(3),
Title VARCHAR(255),
LeaderId NUMBER(3),
PRIMARY KEY (ProjectId),
FOREIGN KEY (LeaderId) REFERENCES LEADER
);

CREATE TABLE Task(
TaskId NUMBER(3),
Description VARCHAR(255),
Cost NUMBER(5),
ProjectId NUMBER(3),
PRIMARY KEY (TaskId),
FOREIGN KEY (ProjectId) REFERENCES PROJECT
);

SELECT T.TaskId, T.Description, P.Title, L.Name
FROM Task T
INNER JOIN Project P
on T.ProjectId=P.ProjectId
INNER JOIN Leader L
on P.LeaderId=L.leaderId;


LAB QUESTIONS:

1. 
SELECT * FROM movie

2.
SELECT * FROM rating

3.
SELECT *
FROM movie
WHERE UPPER(Title) LIKE 'THE%'

4.
SELECT *
FROM movie
WHERE UPPER(Title) LIKE '%THE%'

5.


6.
SELECT title
FROM movie
WHERE MOVIENO = 137
OR MOVIENO=314
OR MOVIENO=9502
OR MOVIENO=44214

--OR--

SELECT title FROM Movie
WHERE MOVIENO IN (137,314,9502,44214);

7.
SELECT T.TaskId, T.Description, P.Title
FROM Task T 						
INNER JOIN Project P				
on T.ProjectId=P.ProjectId
INNER JOIN Leader L				
on P.LeaderId=L.leaderId;

LAB QUESTIONS:
1.
run the create tables script

2.
a. SELECT * FROM MOVIE
b. SELECT * FROM RATING
c. SELECT * FROM MOVIECOLOUR

3.
SELECT M.TITLE
FROM MOVIE M
WHERE UPPER(TITLE) LIKE 'THE%'

4.
SELECT M.TITLE
FROM MOVIE M
WHERE UPPER(TITLE) LIKE '%THE%'

5.
SELECT UNIQUE rating_code FROM MOVIE

6.
SELECT * FROM movie WHERE MovieNo IN(137,314,9502,44214)


7.
SELECT title,relyear,runtime,rating_code
FROM movie
WHERE rating_code='M'
AND
runtime>=120;

8.
SELECT title FROM MOVIE WHERE UPPER(title) LIKE '%DAY%'

9. 
SELECT *
FROM movie
WHERE rating_code LIKE '%M%'

10.
SELECT *
FROM movie
WHERE NOT(rating_code LIKE '%M%')

11.
SELECT title,rating_code,imdb_score,colour_code
FROM movie
WHERE rating_code='PG' AND imdb_score>8.0
OR rating_code='M' AND imdb_score>7.7

12.
SELECT title,rating_code,imdb_score,colour_code
FROM movie
WHERE rating_code='PG' AND imdb_score>8.0 AND colour_code='B'
OR rating_code='M' AND imdb_score>7.7 AND colour_code='B'

13.
SELECT title,relyear,runtime
FROM movie
WHERE relyear='1999' OR relyear='2006' AND runtime>=140

14.
SELECT M.title, M.relyear, M.rating_code, R.shortdesc
FROM movie M
INNER JOIN rating R
ON M.rating_code=R.rating_code

15.
SELECT M.title, M.relyear, M.rating_code, R.longdesc
FROM movie M
INNER JOIN rating R
ON M.rating_code=R.rating_code
WHERE M.relyear<=1980

16.
SELECT M.title,M.relyear,M.rating_code,R.longdesc
FROM movie M
INNER JOIN rating R
ON M.rating_code=R.rating_code
WHERE R.longdesc LIKE '%15%'

17.
INSERT INTO movie VALUES (666,'The Animatrix',2003,100,'M','C',7.4,65421,'tt0328832')
SELECT * FROM movie
WHERE movieNo=666

























































HOW TO DO AN INNER JOIN

DROP TABLE Subject;
DROP TABLE Lecturer;

CREATE TABLE Lecturer (
LectId NUMBER(3),
Name VARCHAR(20),
Age NUMBER(2),
PRIMARY KEY(LectId)
);

INSERT INTO Lecturer VALUES (001,'Brian Smith',24);
INSERT INTO Lecturer VALUES (007,'Lee Shan',31);
INSERT INTO Lecturer VALUES (012,'Joshep Petal',27);

CREATE TABLE Subject (
SubCode VARCHAR(12),
Title VARCHAR(20),
CreditPoint NUMBER(2),
LectId NUMBER(3),
PRIMARY KEY(SubCode),
FOREIGN KEY(LectId) REFERENCES Lecturer
);

INSERT INTO Subject VALUES ('INF10004','Database',10,007);
INSERT INTO Subject VALUES ('INF20015','RAM',10,012);
INSERT INTO Subject VALUES ('INF10007','Web Desigining',10,001);
INSERT INTO Subject VALUES ('INF10009','Programming',10,007);

SELECT Subject.SubCode, Lecturer.Name 
FROM Subject
INNER JOIN Lecturer
ON
Subject.LectId=Lecturer.LectId;
WHERE Lecturer.Age <30;

--OR THR SHORTHAND WAY--

SELECT S.SubCode, L.Name 
FROM Subject S
INNER JOIN Lecturer L
ON
S.LectId=L.LectId;
WHERE L.Age <30;
